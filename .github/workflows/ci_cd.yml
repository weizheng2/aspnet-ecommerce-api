name: CI/CD

# When to run this workflow
on:
  # Manual execution
  workflow_dispatch:
  
 # push:
 #   branches: [ main ]
 #   paths:
 #     - '01-Layered-Architecture/**'
 
 # pull_request:
 #   branches: [ main ]
 #   paths:
 #     - '01-Layered-Architecture/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5.0.0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Restore dependencies
      run: dotnet restore 01-Layered-Architecture/ECommerce.sln
    
    - name: Build solution
      run: dotnet build 01-Layered-Architecture/ECommerce.sln --no-restore --configuration Release

    - name: Run Unit Tests
      run: dotnet test 01-Layered-Architecture/ECommerceApi.UnitTests/ECommerceApi.UnitTests.csproj --verbosity normal
    
    - name: Run Integration Tests
      run: dotnet test 01-Layered-Architecture/ECommerceApi.IntegrationTests/ECommerceApi.IntegrationTests.csproj --verbosity normal

    - name: Publish app
      run: dotnet publish 01-Layered-Architecture/ECommerceApi \
            --configuration Release \
            --runtime win-x64 \
            --output 01-Layered-Architecture/ECommerceApi/bin/Publish

    - name: Upload publish artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: app
        path: 01-Layered-Architecture/ECommerceApi/bin/Publish
        
  build-and-deploy:
    needs: build-and-test
    runs-on: windows-latest

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v5.0.0
      with:
        name: app

    - name: Deploy to MonsterASP.NET via WebDeploy
      uses: rasmusbuchholdt/simply-web-deploy@2.2.0
      with:
        website-name: ${{ secrets.WEBSITE_NAME }}
        server-computer-name: ${{ secrets.SERVER_COMPUTER_NAME }}
        server-username: ${{ secrets.SERVER_USERNAME }}
        server-password: ${{ secrets.SERVER_PASSWORD }}
